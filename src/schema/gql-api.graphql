type User {
  id: ID!
  email: String!
  post: [Post!]!
}

type Roles {
  id: ID!
  name: String!
  description: String
  state: Int!
}

type UserRoles {
  id: ID!
  usuario: User!
  perfil: Roles!
  state: Int!
}

type Ruta {
  id: ID!
  ruta: String!
  state: Int!
}

type RutasRoles {
  id: ID!
  rutas: Ruta!
  perfil: Roles!
  state: Int!
}

type Post {
  id: ID!
  title: String!
  body: String
  author: User
}

input SignUpInput {
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input PostInput {
  title: String!
  body: String!
  authorEmail: String!
}

input RolInput {
  name: String!
  description: String!
  state: Int!
}

input UserRolInput {
  authorEmail: String!
  rolName: String!
  state: Int!
}

type AuthPayload {
  id: ID!
  email: String!
}

type UserToken {
  token: String!
  user: User!
}

type PostModel {
  post: Post!
}

type Query {
  post(id: ID!): Post!
  posts: [Post!]!
}

type Mutation {
  signup(input: SignUpInput): UserToken!
  login(input: LoginInput): UserToken!
  createPost(input: PostInput): Post!
  createRol(input: RolInput): Roles!
}